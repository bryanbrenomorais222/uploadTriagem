# Generated by Django 3.1.7 on 2022-04-07 14:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Alergia',
                'verbose_name_plural': 'Alergias',
            },
        ),
        migrations.CreateModel(
            name='AllergyReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Reação da Alergia',
                'verbose_name_plural': 'Reações das Alergias',
            },
        ),
        migrations.CreateModel(
            name='BloodPressureRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('systolic_min', models.IntegerField(verbose_name='Sistólica Mínima')),
                ('systolic_max', models.IntegerField(verbose_name='Sistólica Máxima')),
                ('diastolic_min', models.IntegerField(verbose_name='Diastólica Mínima')),
                ('diastolic_max', models.IntegerField(verbose_name='Diastólica Máxima')),
            ],
            options={
                'verbose_name': 'Faixa de Pressão Sanguínea',
                'verbose_name_plural': 'Faixas de Pressão Sanguínea',
            },
        ),
        migrations.CreateModel(
            name='Comorbidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Comorbidade',
                'verbose_name_plural': 'Comorbidades',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='Nome Completo')),
                ('civil_status', models.CharField(choices=[('S', 'Solteiro(a)'), ('C', 'Casado(a)'), ('D', 'Divorciado(a)'), ('V', 'Viúvo(a)')], default='S', max_length=1, verbose_name='Estado Civil')),
                ('sex', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('I', 'Intersexo'), ('PNI', 'Prefiro não informar')], default='F', max_length=3, verbose_name='Sexo')),
                ('gender', models.CharField(choices=[('M', 'Mulher'), ('H', 'Homem'), ('NB', 'Não-binárie'), ('PNI', 'Prefiro não informar')], default='M', max_length=3, verbose_name='Gênero')),
                ('cpf', models.CharField(max_length=100, verbose_name='CPF')),
                ('rg', models.CharField(max_length=100, verbose_name='RG')),
                ('issuing_agency', models.CharField(max_length=100, verbose_name='Órgão de Expedição')),
                ('issuing_date', models.DateField(null=True, verbose_name='Data de Expedição')),
                ('place_of_birth', models.CharField(blank=True, max_length=100, verbose_name='Naturalidade')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('cell_number', models.CharField(max_length=100, verbose_name='Telefone Celular')),
                ('tel_number', models.CharField(blank=True, max_length=100, verbose_name='Telefone Residencial')),
                ('email_adress', models.EmailField(blank=True, max_length=100, verbose_name='E-mail')),
                ('street_adress', models.CharField(max_length=100, verbose_name='Endereço')),
                ('home_number', models.PositiveIntegerField(null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('district', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=100, verbose_name='CEP')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('crm', models.CharField(max_length=100, verbose_name='CRM')),
                ('specialty', models.CharField(max_length=100, verbose_name='Especialidade')),
                ('occupation_area', models.CharField(max_length=100, verbose_name='Área de atuação')),
                ('status', models.CharField(choices=[('A', 'Ativo(a)'), ('I', 'Inativo(a)')], default='A', max_length=1, verbose_name='Situação')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Médico(a)',
                'verbose_name_plural': 'Médicos(as)',
            },
        ),
        migrations.CreateModel(
            name='HeartRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('min', models.IntegerField(verbose_name='Valor mínimo')),
                ('max', models.IntegerField(verbose_name='Valor máximo')),
            ],
            options={
                'verbose_name': 'Frequência Cardíaca',
                'verbose_name_plural': 'Frequência Cardíaca',
            },
        ),
        migrations.CreateModel(
            name='HomeUseMedication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Medicação de Uso Domiciliar',
                'verbose_name_plural': 'Medicações de Uso Domiciliar',
            },
        ),
        migrations.CreateModel(
            name='ImcClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('min_value', models.FloatField(verbose_name='Valor mínimo')),
                ('max_value', models.FloatField(verbose_name='Valor máximo')),
            ],
            options={
                'verbose_name': 'Classificação IMC',
                'verbose_name_plural': 'Classificação IMC',
            },
        ),
        migrations.CreateModel(
            name='MotorResponseLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('value', models.IntegerField(verbose_name='Pontuação')),
                ('informative_text', models.TextField(verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Nível de Resposta Motora',
                'verbose_name_plural': 'Níveis de Resposta Motora',
            },
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='Nome Completo')),
                ('civil_status', models.CharField(choices=[('S', 'Solteiro(a)'), ('C', 'Casado(a)'), ('D', 'Divorciado(a)'), ('V', 'Viúvo(a)')], default='S', max_length=1, verbose_name='Estado Civil')),
                ('sex', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('I', 'Intersexo'), ('PNI', 'Prefiro não informar')], default='F', max_length=3, verbose_name='Sexo')),
                ('gender', models.CharField(choices=[('M', 'Mulher'), ('H', 'Homem'), ('NB', 'Não-binárie'), ('PNI', 'Prefiro não informar')], default='M', max_length=3, verbose_name='Gênero')),
                ('cpf', models.CharField(max_length=100, verbose_name='CPF')),
                ('rg', models.CharField(max_length=100, verbose_name='RG')),
                ('issuing_agency', models.CharField(max_length=100, verbose_name='Órgão de Expedição')),
                ('issuing_date', models.DateField(null=True, verbose_name='Data de Expedição')),
                ('place_of_birth', models.CharField(blank=True, max_length=100, verbose_name='Naturalidade')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('cell_number', models.CharField(max_length=100, verbose_name='Telefone Celular')),
                ('tel_number', models.CharField(blank=True, max_length=100, verbose_name='Telefone Residencial')),
                ('email_adress', models.EmailField(blank=True, max_length=100, verbose_name='E-mail')),
                ('street_adress', models.CharField(max_length=100, verbose_name='Endereço')),
                ('home_number', models.PositiveIntegerField(null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('district', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=100, verbose_name='CEP')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('coren', models.CharField(max_length=100, verbose_name='Coren')),
                ('status', models.CharField(choices=[('A', 'Ativo(a)'), ('I', 'Inativo(a)')], default='A', max_length=1, verbose_name='Situação')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Enfermeiro(a)',
                'verbose_name_plural': 'Enfermeiros(as)',
            },
        ),
        migrations.CreateModel(
            name='OcularOpeningLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('value', models.IntegerField(verbose_name='Pontuação')),
                ('informative_text', models.TextField(verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Nível de Abertura Ocular',
                'verbose_name_plural': 'Níveis de Abertura Ocular',
            },
        ),
        migrations.CreateModel(
            name='OtherAssociatedFactor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('informative_text', models.TextField(blank=True, verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Outro fator associado',
                'verbose_name_plural': 'Outros fatores associados',
            },
        ),
        migrations.CreateModel(
            name='OximetryRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('min', models.IntegerField(verbose_name='Valor mínimo')),
                ('max', models.IntegerField(verbose_name='Valor máximo')),
            ],
            options={
                'verbose_name': 'Faixa de Oximetria',
                'verbose_name_plural': 'Faixas de Oximetria',
            },
        ),
        migrations.CreateModel(
            name='PainClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('min', models.IntegerField(verbose_name='Valor mínimo')),
                ('max', models.IntegerField(verbose_name='Valor máximo')),
            ],
            options={
                'verbose_name': 'Classificação de Dor',
                'verbose_name_plural': 'Classificação de Dor',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='Nome Completo')),
                ('civil_status', models.CharField(choices=[('S', 'Solteiro(a)'), ('C', 'Casado(a)'), ('D', 'Divorciado(a)'), ('V', 'Viúvo(a)')], default='S', max_length=1, verbose_name='Estado Civil')),
                ('sex', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino'), ('I', 'Intersexo'), ('PNI', 'Prefiro não informar')], default='F', max_length=3, verbose_name='Sexo')),
                ('gender', models.CharField(choices=[('M', 'Mulher'), ('H', 'Homem'), ('NB', 'Não-binárie'), ('PNI', 'Prefiro não informar')], default='M', max_length=3, verbose_name='Gênero')),
                ('cpf', models.CharField(max_length=100, verbose_name='CPF')),
                ('rg', models.CharField(max_length=100, verbose_name='RG')),
                ('issuing_agency', models.CharField(max_length=100, verbose_name='Órgão de Expedição')),
                ('issuing_date', models.DateField(null=True, verbose_name='Data de Expedição')),
                ('place_of_birth', models.CharField(blank=True, max_length=100, verbose_name='Naturalidade')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('cell_number', models.CharField(max_length=100, verbose_name='Telefone Celular')),
                ('tel_number', models.CharField(blank=True, max_length=100, verbose_name='Telefone Residencial')),
                ('email_adress', models.EmailField(blank=True, max_length=100, verbose_name='E-mail')),
                ('street_adress', models.CharField(max_length=100, verbose_name='Endereço')),
                ('home_number', models.PositiveIntegerField(null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('district', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cep', models.CharField(max_length=100, verbose_name='CEP')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('uf', models.CharField(max_length=2, verbose_name='UF')),
                ('mother_full_name', models.CharField(blank=True, max_length=100, verbose_name='Nome Completo da Mãe')),
                ('father_full_name', models.CharField(blank=True, max_length=100, verbose_name='Nome Completo do Pai')),
                ('sus_id', models.CharField(blank=True, max_length=100, verbose_name='SUS')),
                ('health_insurance_id', models.CharField(blank=True, max_length=100, verbose_name='Plano de Saúde')),
                ('obs', models.CharField(blank=True, max_length=200, verbose_name='Observação')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('initial', models.CharField(choices=[('one', 'Segundo(s)'), ('two', 'Minuto(s)'), ('three', 'Hora(s)'), ('four', 'Dia(s)')], max_length=100, verbose_name='Inicial')),
                ('initialPeriod', models.PositiveIntegerField(verbose_name='Período Inicial')),
                ('final', models.CharField(choices=[('one', 'Segundo(s)'), ('two', 'Minuto(s)'), ('three', 'Hora(s)'), ('four', 'Dia(s)')], max_length=100, verbose_name='Final')),
                ('finalPeriod', models.PositiveIntegerField(verbose_name='Período Final')),
            ],
            options={
                'verbose_name': 'Período',
                'verbose_name_plural': 'Períodos',
            },
        ),
        migrations.CreateModel(
            name='PeripheralCapillaryBloodGlucose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('value', models.IntegerField(verbose_name='Valor (em mg/dL)')),
            ],
            options={
                'verbose_name': 'Glicemia Capilar Periférica',
                'verbose_name_plural': 'Glicemia Capilar Periférica',
            },
        ),
        migrations.CreateModel(
            name='PreviousSurgery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
            ],
            options={
                'verbose_name': 'Cirurgia Prévia',
                'verbose_name_plural': 'Cirurgias Prévias',
            },
        ),
        migrations.CreateModel(
            name='PupilEvaluationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('value', models.IntegerField(verbose_name='Pontuação')),
                ('informative_text', models.TextField(verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Nível de Avaliação Pupilar',
                'verbose_name_plural': 'Níveis de Avaliação Pupilar',
            },
        ),
        migrations.CreateModel(
            name='RespiratoryFrequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100)),
                ('min', models.IntegerField(verbose_name='Valor mínimo')),
                ('max', models.IntegerField(verbose_name='Valor máximo')),
            ],
            options={
                'verbose_name': 'Frequência Respiratória',
                'verbose_name_plural': 'Frequência Respiratória',
            },
        ),
        migrations.CreateModel(
            name='ScreeningProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Nome do Protocolo')),
                ('info_text', models.TextField(verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Protocolo de Triagem',
                'verbose_name_plural': 'Protocolos de Triagem',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('info_text', models.TextField(verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Sintoma',
                'verbose_name_plural': 'Sintomas',
            },
        ),
        migrations.CreateModel(
            name='TemperatureRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('min', models.FloatField(verbose_name='Valor mínimo')),
                ('max', models.FloatField(verbose_name='Valor máximo')),
            ],
            options={
                'verbose_name': 'Faixa de Temperatura',
                'verbose_name_plural': 'Faixas de Temperatura',
            },
        ),
        migrations.CreateModel(
            name='vaccineRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('establishment', models.CharField(blank=True, max_length=200, null=True)),
                ('dateofArrival', models.DateField(blank=True, null=True, verbose_name='Data da chegada')),
                ('immunobiological', models.CharField(blank=True, max_length=100, null=True)),
                ('load', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True, verbose_name='Quantidade')),
                ('validity_period', models.DateField(blank=True, null=True, verbose_name='Validade')),
                ('manufacturer', models.CharField(max_length=200, null=True, verbose_name='Fabricante')),
                ('dosage', models.CharField(blank=True, max_length=100, null=None, verbose_name='Dosagem')),
            ],
        ),
        migrations.CreateModel(
            name='VerbalResponseLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('value', models.IntegerField(verbose_name='Pontuação')),
                ('informative_text', models.TextField(verbose_name='Texto informativo')),
            ],
            options={
                'verbose_name': 'Nível de Resposta Verbal',
                'verbose_name_plural': 'Níveis de Resposta Verbal',
            },
        ),
        migrations.CreateModel(
            name='vaccination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose', models.CharField(choices=[('DU', 'Dose Única'), ('D1', 'Primeira Dose'), ('D2', 'Segunda Dose'), ('D3', 'Terceira Dose')], default='DU', max_length=50, verbose_name='Dose')),
                ('maternal_condition', models.CharField(blank=True, max_length=200, null=True)),
                ('dateofVaccination', models.DateField(blank=True, null=True, verbose_name='Data de vacinação')),
                ('note', models.DateField(blank=True, null=True, verbose_name='Observação')),
                ('immunobiological_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.vaccineregistration', verbose_name='Imunizante')),
                ('nurse_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.nurse', verbose_name='Enfermeiro(a)')),
                ('patient_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Nome do Paciente')),
            ],
        ),
        migrations.CreateModel(
            name='SymptomGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('list_symptoms', models.ManyToManyField(to='core.Symptom')),
            ],
            options={
                'verbose_name': 'Grupo de Sintomas',
                'verbose_name_plural': 'Grupos de Sintomas',
            },
        ),
        migrations.CreateModel(
            name='ScreeningFlowchart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Nome do fluxograma')),
                ('info_text', models.TextField(verbose_name='Texto informativo')),
                ('related_flowcharts', models.ManyToManyField(blank=True, to='core.ScreeningFlowchart', verbose_name='Fluxogramas Relacionados')),
                ('related_protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.screeningprotocol', verbose_name='Protocolo associado')),
            ],
            options={
                'verbose_name': 'Fluxograma de Triagem',
                'verbose_name_plural': 'Fluxogramas de Triagem',
            },
        ),
        migrations.CreateModel(
            name='PreviousSurgeryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('previous_surgeries', models.ManyToManyField(to='core.PreviousSurgery')),
            ],
            options={
                'verbose_name': 'Grupo de Cirurgias Prévias',
                'verbose_name_plural': 'Grupos de Cirurgias Prévias',
            },
        ),
        migrations.CreateModel(
            name='HomeUseMedicationGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('home_use_medications', models.ManyToManyField(to='core.HomeUseMedication')),
            ],
            options={
                'verbose_name': 'Grupo de Medicações de Uso Domiciliar',
                'verbose_name_plural': 'Grupos de Medicações de Uso Domiciliar',
            },
        ),
        migrations.CreateModel(
            name='ComorbidityGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descr', models.CharField(max_length=100, verbose_name='Descrição')),
                ('comorbs', models.ManyToManyField(to='core.Comorbidity')),
            ],
            options={
                'verbose_name': 'Grupo de Comorbidades',
                'verbose_name_plural': 'Grupos de Comorbidades',
            },
        ),
        migrations.CreateModel(
            name='AppointmentNurse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('AA', 'Aguardando atendimento'), ('A', 'Em atendimento'), ('EI', 'Em escuta inicial'), ('AR', 'Atendimento realizado')], default='AA', max_length=2, verbose_name='Situação')),
                ('appointment_type', models.CharField(choices=[('AM', 'Adm. medicamento'), ('C', 'Curativo'), ('EI', 'Escuta inicial'), ('N', 'Nebulização'), ('P', 'Procedimentos'), ('A', 'Agendado'), ('DE', 'Demanda espontânea'), ('E', 'Exames'), ('O', 'Odontologia')], default='AM', max_length=2, verbose_name='Tipo de atendimento')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('nurse_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.nurse', verbose_name='Nome do(a) profissional')),
                ('patient_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Nome do(a) paciente')),
            ],
            options={
                'verbose_name': 'Atendimento enfermagem',
                'verbose_name_plural': 'Atendimento enfermagem',
            },
        ),
        migrations.CreateModel(
            name='AppointmentDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('AA', 'Aguardando atendimento'), ('A', 'Em atendimento'), ('EI', 'Em escuta inicial'), ('AR', 'Atendimento realizado')], default='AA', max_length=2, verbose_name='Situação')),
                ('appointment_type', models.CharField(choices=[('AM', 'Adm. medicamento'), ('C', 'Curativo'), ('EI', 'Escuta inicial'), ('N', 'Nebulização'), ('P', 'Procedimentos'), ('A', 'Agendado'), ('DE', 'Demanda espontânea'), ('E', 'Exames'), ('O', 'Odontologia')], default='AM', max_length=2, verbose_name='Tipo de atendimento')),
                ('description', models.TextField(blank=True, max_length=200, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('doctor_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.doctor', verbose_name='Nome do(a) profissional')),
                ('patient_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.patient', verbose_name='Nome do(a) paciente')),
            ],
            options={
                'verbose_name': 'Atendimento médico',
                'verbose_name_plural': 'Atendimento médico',
            },
        ),
        migrations.CreateModel(
            name='AllergyReactionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('allergy_reactions', models.ManyToManyField(to='core.AllergyReaction')),
            ],
            options={
                'verbose_name': 'Grupo das Reações das Alergias',
                'verbose_name_plural': 'Grupos das Reações das Alergias',
            },
        ),
        migrations.CreateModel(
            name='AllergyGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('allergies', models.ManyToManyField(to='core.Allergy')),
            ],
            options={
                'verbose_name': 'Grupo de Alergias',
                'verbose_name_plural': 'Grupos de Alergias',
            },
        ),
    ]
